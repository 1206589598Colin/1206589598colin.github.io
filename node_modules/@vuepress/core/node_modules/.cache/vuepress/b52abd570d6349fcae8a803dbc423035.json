{"remainingRequest":"/var/www/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/node_modules/cache-loader/dist/cjs.js??ref--1-0!/var/www/node_modules/vue-loader/lib/index.js??ref--1-1!/var/www/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/var/www/src/开发基础/面向对象需求分析与UML建模/PlantUML实战/时序图.md?vue&type=template&id=56a6d0c4&","dependencies":[{"path":"/var/www/src/开发基础/面向对象需求分析与UML建模/PlantUML实战/时序图.md","mtime":1615794377329},{"path":"/var/www/node_modules/cache-loader/dist/cjs.js","mtime":1620892112368},{"path":"/var/www/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1620892112813},{"path":"/var/www/node_modules/cache-loader/dist/cjs.js","mtime":1620892112368},{"path":"/var/www/node_modules/vue-loader/lib/index.js","mtime":1620892112813},{"path":"/var/www/node_modules/@vuepress/markdown-loader/index.js","mtime":1620892110587}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}